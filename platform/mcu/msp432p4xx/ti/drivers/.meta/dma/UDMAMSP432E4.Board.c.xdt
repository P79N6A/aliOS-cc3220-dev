%%{
    let DMA       = args[0];
    let Common    = system.getScript("/ti/drivers/Common.js");
%%}
/*
 *  =============================== DMA ===============================
 */

#include <ti/drivers/dma/UDMAMSP432E4.h>
#include <ti/devices/msp432e4/inc/msp432.h>
#include <ti/devices/msp432e4/driverlib/interrupt.h>
#include <ti/devices/msp432e4/driverlib/udma.h>

/* ensure DMA control table is aligned as required by the uDMA HW */
#if defined(__TI_COMPILER_VERSION__)
#pragma DATA_ALIGN(dmaControlTable, 1024)
#elif defined(__IAR_SYSTEMS_ICC__)
#pragma data_alignment=1024
#elif defined(__GNUC__)
__attribute__ ((aligned (1024)))
#endif

static tDMAControlTable dmaControlTable[64];

% /* install default handler if no change to dmaErrorFxn */
% if (DMA.$static.dmaErrorFxn == 'dmaErrorFxn') {
/* This is the handler for the uDMA error interrupt. */
static void dmaErrorFxn(uintptr_t arg)
{
    int status = uDMAErrorStatusGet();
    uDMAErrorStatusClear();

    /* Suppress unused variable warning */
    (void)status;

    while (1);
}
% } else {
extern void `DMA.$static.dmaErrorFxn`(uintptr_t arg);
% }

UDMAMSP432E4_Object udmaMSP432E4Object;

const UDMAMSP432E4_HWAttrs udmaMSP432E4HWAttrs = {
    .controlBaseAddr = (void *)dmaControlTable,
    .dmaErrorFxn     = (UDMAMSP432E4_ErrorFxn)`DMA.$static.dmaErrorFxn`,
    .intNum          = INT_UDMAERR,
    .intPriority     = `Common.intPriority2Hex(DMA.$static.intPriority)`
};

const UDMAMSP432E4_Config UDMAMSP432E4_config = {
    .object  = &udmaMSP432E4Object,
    .hwAttrs = &udmaMSP432E4HWAttrs
};
