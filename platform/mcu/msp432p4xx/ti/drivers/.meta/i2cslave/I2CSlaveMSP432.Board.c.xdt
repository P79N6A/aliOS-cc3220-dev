%%{
    let I2CSlave = args[0]; /* passed by /ti/drivers/templates/Board.c.xdt */

    /* get ti/drivers common utility functions */
    let Common = system.getScript("/ti/drivers/Common.js");

    /* shorthand names for some common references in template below */
    let getPort = Common.getPort;
    let instances = I2CSlave.$instances;

    /* Board_XXXCOUNT string, derived from defaultInstanceName */
    let countDef = I2CSlave.defaultInstanceName + "COUNT";%%}
/*
 *  =============================== I2CSlave ===============================
 */

#include <ti/drivers/I2CSlave.h>
#include <ti/drivers/i2cslave/I2CSlaveMSP432.h>

/* include MSP432 driverlib definitions */
#include <ti/devices/msp432p4xx/inc/msp.h>
#include <ti/devices/msp432p4xx/driverlib/interrupt.h>
#include <ti/devices/msp432p4xx/driverlib/i2c.h>

#define `countDef` `instances.length`

/*
 *  ======== i2cSlaveMSP432Objects ========
 */
I2CSlaveMSP432_Object i2cSlaveMSP432Objects[`countDef`];

/*
 *  ======== i2cSlaveMSP432HWAttrs ========
 */
const I2CSlaveMSP432_HWAttrs i2cSlaveMSP432HWAttrs[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
     % let inst = instances[i];
     %
     % /* i2c is a hash of resources assigned to inst: sdaPin, sclPin */
     % let i2c = inst.i2c;
     %
     % /* name is the peripheral name: EUSCI_A<num> or EUSCI_B<num> ... */
     % let name = inst.i2c.$solution.peripheralName;
     % let type = name.substring(0, 7); /* EUSCI_A or EUSCI_B or ... */
     % let id = name.substring(6);      /* A0 or A1 or B0 or ... */
     % let sclPin = getPort(i2c.sclPin);
     % let sdaPin = getPort(i2c.sdaPin);
    {
        .baseAddr = `name`_BASE,
        .intNum = INT_EUSCI`id`,
        .intPriority = `Common.intPriority2Hex(inst.intPriority)`,
        .slaveAddress = `inst.slaveAddr`,
        .dataPin = I2CSLAVEMSP432_`sdaPin`_UC`id`SDA,
        .clkPin  = I2CSLAVEMSP432_`sclPin`_UC`id`SCL
    },
% }
};

/*
 *  ======== I2CSlave_config ========
 */
const I2CSlave_Config I2CSlave_config[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let name = inst.$name;
    {
        .fxnTablePtr = &I2CSlaveMSP432_fxnTable,
        .object = &i2cSlaveMSP432Objects[`name`],
        .hwAttrs = &i2cSlaveMSP432HWAttrs[`name`]
    },
% }
};

const uint_least8_t I2CSlave_count = `countDef`;
