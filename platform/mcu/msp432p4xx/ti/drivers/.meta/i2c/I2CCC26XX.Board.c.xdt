%%{
    let I2C = args[0]; /* passed by /ti/drivers/templates/Board.c.xdt */

    /* get ti/drivers common utility functions */
    let Common = system.getScript("/ti/drivers/Common.js");

    /* localize the object names with this device ID */
    let devId = system.deviceData.deviceId;

    /* shorthand names for some common references in template below */
    let getPort = Common.getPort;
    let instances = I2C.$instances;

    /* Board_XXXCOUNT string, derived from defaultInstanceName */
    let countDef = I2C.defaultInstanceName + "COUNT";
%%}
/*
 *  =============================== I2C ===============================
 */

#include <ti/drivers/I2C.h>
#include <ti/drivers/i2c/I2CCC26XX.h>
#include <ti/drivers/power/PowerCC26XX.h>

#define `countDef` `instances.length`

/*
 *  ======== i2cCC26xxObjects ========
 */
I2CCC26XX_Object i2cCC26xxObjects[`countDef`];

/*
 *  ======== i2cCC26xxHWAttrs ========
 */
const I2CCC26XX_HWAttrsV1 i2cCC26xxHWAttrs[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % /* i2c is a hash of resources assigned to inst: sclPin, sdaPin */
    % let i2c = inst.i2c;
    % let sclPin = i2c.sclPin.$solution.devicePinName.substring(4);
    % let sdaPin = i2c.sdaPin.$solution.devicePinName.substring(4);
    /* `inst.$name` */
    % if (inst.$hardware) {
    %    if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %    }
    % }
    {
        .baseAddr    = I2C0_BASE,
        .powerMngrId = PowerCC26XX_PERIPH_I2C0,
        .intNum      = INT_I2C_IRQ,
        .intPriority = `Common.intPriority2Hex(inst.intPriority)`,
        .swiPriority = `Common.swiPriority2Int(inst.swiPriority)`,
        .sclPin      = IOID_`sclPin`,
        .sdaPin      = IOID_`sdaPin`
    },
% }
};

/*
 *  ======== I2C_config ========
 */
const I2C_Config I2C_config[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let name = inst.$name;
    /* `inst.$name` */
    % if (inst.$hardware) {
    %    if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %    }
    % }
    {
        .fxnTablePtr = &I2CCC26XX_fxnTable,
        .object      = &i2cCC26xxObjects[`name`],
        .hwAttrs     = &i2cCC26xxHWAttrs[`name`]
    },
% }
};

const uint_least8_t I2C_count = `countDef`;