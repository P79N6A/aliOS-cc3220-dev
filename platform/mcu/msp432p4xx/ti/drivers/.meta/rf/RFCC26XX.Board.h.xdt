%%{
    /* RF module passed in args[] */
    let RF = args[0];

    /* get ti/drivers common utility functions */
    let Common = system.getScript("/ti/drivers/Common.js");

    /* localize the object names with this device ID */
    let devId = system.deviceData.deviceId;

    /* Get name of device specific include directory */
    let devicesDir = Common.device2DevicesDir(devId);

    let instances = RF.$instances;
    let defs = Common.genBoardHeader(instances, RF);

    let boardName = Common.boardName();
    let rfPinName = '';
    let rfPowerPinName = '';
    let ioid = '';
    let ioidPower = '';
    let dio = '';
    let devPins = RF.moduleStatic.devicePins;

    if ((instances.length > 0) && (instances[0].$hardware)) {
        for (let i = 0; i < devPins.length; i++) {
            if (devPins[i].name.match(/SUB1GHZ/)) {
                ioid = devPins[i].ioid;
                dio = ioid.replace(/IOID_/, 'DIO');
                rfPinName = 'Board_' + dio + '_RFSW';
            }
            if (devPins[i].name.match(/POWER/) &&
                    boardName.match(/CC1350_LAUNCHXL/)) {
                ioidPower = devPins[i].ioid;
                dio = ioidPower.replace(/IOID_/, 'DIO');
                rfPowerPinName = 'Board_' + dio + '_SWPWR';
            }
        }
    }
%%}
% if (rfPinName.length > 0) {
%
%  // Special defines needed for RF examples.
%
/*
 *  ======== RF ========
 */
#include <ti/devices/`devicesDir`/driverlib/ioc.h>

#define `rfPinName` `ioid`
% if (rfPowerPinName.length > 0) {
#define `rfPowerPinName` `ioidPower`
% }
% }
