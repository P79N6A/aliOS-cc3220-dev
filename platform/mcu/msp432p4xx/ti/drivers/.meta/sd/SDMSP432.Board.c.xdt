%%{
    let instances = args[0].$instances;
    let fatIndex = 0;

    /* Reorder instances such that FATFS indices are first */
    if (instances[0].useFATFS === true) {
        fatIndex = 1;
    }
    for (let index = 1; index < instances.length; index++) {

        if (instances[index].useFATFS === true) {
            if (index != fatIndex) {
                let copy = instances[index];
                instances[index] = instances[fatIndex];
                instances[fatIndex] = copy;
            }
            fatIndex++;
        }
    }
%%}
/*
 *  =============================== SD ===============================
 */
#include <ti/drivers/SD.h>
#include <ti/drivers/sd/SDSPI.h>
% if (fatIndex > 0) {
#include <ti/drivers/SDFatFS.h>

SDFatFS_Object sdfatfsObjects[`fatIndex`];

const SDFatFS_Config SDFatFS_config[`fatIndex`] = {
% for (let i = 0; i < fatIndex; i++) {
    % let inst = instances[i];
    /* `inst.$name` */
    {
        .object = &sdfatfsObjects[`inst.$name`]
    },
% }
};

const uint_least8_t SDFatFS_count = `fatIndex`;
% }

SDSPI_Object sdspiObjects[`instances.length`];

static const SDSPI_HWAttrs sdspiHWAttrs[`instances.length`] = {
% for (i = 0; i < instances.length; i++) {
%     let inst = instances[i];
    /* `inst.$name` */
    % if (inst.$hardware) {
    %    if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %    }
    % }
    {
        .spiIndex = `inst.spiInstance.$name`,
        .spiCsGpioIndex = `inst.spiCsGpioInstance.$name`
    },
% }
};

const SD_Config SD_config[`instances.length`] = {
% for (i = 0, j = 0; i < instances.length; i++) {
    % let inst = instances[i];
    /* `inst.$name` */
    % if (inst.$hardware) {
    %    if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %    }
    % }
    {
        .fxnTablePtr = &SDSPI_fxnTable,
        .object = &sdspiObjects[`inst.$name`],
        .hwAttrs = &sdspiHWAttrs[`inst.$name`]
    },
% }
};

const uint_least8_t SD_count = `instances.length`;