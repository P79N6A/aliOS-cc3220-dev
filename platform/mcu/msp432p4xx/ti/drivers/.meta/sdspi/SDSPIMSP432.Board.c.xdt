%%{
    let SDSPI = args[0]; /* passed by /ti/drivers/templates/Board.c.xdt */

    /* get ti/drivers common utility functions */
    let Common = system.getScript("/ti/drivers/Common.js");

    /* shorthand names for some common references in template below */
    let getPort = Common.getPort;
    let instances = SDSPI.$instances;

    /* Board_XXXCOUNT string, derived from defaultInstanceName */
    let countDef = SDSPI.defaultInstanceName + "COUNT";
%%}
/*
 *  =============================== SDSPI ===============================
 */

#include <ti/drivers/SDSPI.h>
#include <ti/drivers/Power.h>
#include <ti/drivers/sdspi/SDSPIMSP432.h>

/* include MSP432 driverlib definitions */
#include <ti/devices/msp432p4xx/inc/msp.h>
#include <ti/devices/msp432p4xx/driverlib/spi.h>

#define `countDef` `instances.length`

/*
 *  ======== sdspiMSP432Objects ========
 */
SDSPIMSP432_Object sdspiMSP432Objects[`countDef`];

/*
 *  ======== sdspiMSP432HWAttrs ========
 */
const SDSPIMSP432_HWAttrsV1 sdspiMSP432HWAttrs[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
     % let inst = instances[i];
     %
     %  /* resources is a hash of resources assigned to inst: CLK, SOMI, SIMO ... */
     %  let spi = inst.spi;
     %
     %  /* name is the peripheral name: EUSCI_A<num> or EUSCI_B<num> ... */
     %  let name = inst.spi.$solution.peripheralName;
     %  let type = name.substring(0, 7); /* EUSCI_A or EUSCI_B or ... */
     %  let id = name.substring(6);      /* A0 or A1 or B0 or ... */
     %  let rxDmaCh = (Number(id.substring(1)) * 2) + 1;
     %  let txDmaCh = (Number(id.substring(1)) * 2);
     %  let dmaChId = id.substring(0,1) == "A" ? "" : "0";
     %  let clkPin = getPort(spi.clkPin);
     %  let simoPin = getPort(spi.simoPin);
     %  let somiPin = getPort(spi.somiPin);
     %  let gpioPin = inst.gpioPin;
     %  let csPin = getPort(gpioPin);     /* P1_0 ... */
    {
        .baseAddr = `name`_BASE,
        .clockSource = `type`_SPI_CLOCKSOURCE_SMCLK,

        /* CLK, MOSI, MISO portts and resources */
        .sckPin  = SDSPIMSP432_`clkPin`_UC`id`CLK,
        .somiPin = SDSPIMSP432_`somiPin`_UC`id`SOMI,
        .simoPin = SDSPIMSP432_`simoPin`_UC`id`SIMO,

        /* Chip select port & pin */
        .csPin  = SDSPIMSP432_`csPin`_CS,
    },
% }
};

/*
 *  ======== SDSPI_config ========
 */
const SDSPI_Config SDSPI_config[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let name = inst.$name;
    {
        .fxnTablePtr = &SDSPIMSP432_fxnTable,
        .object = &sdspiMSP432Objects[`name`],
        .hwAttrs = &sdspiMSP432HWAttrs[`name`]
    },
% }
};

const uint_least8_t SDSPI_count = `countDef`;
