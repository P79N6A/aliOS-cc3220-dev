%%{
    /* PIN module passed in args[] */
    let PIN = args[0];

    /* get ti/drivers common utility functions */
    let Common = system.getScript("/ti/drivers/Common.js");

    if (PIN.$instances.length == 0) return;

    let instances = PIN.$instances;

    /* generate a list of all extern references */
    let pinIntPriority = Common.intPriority2Hex(PIN.$static.intPriority);
    let pinSwiPriority = Common.swiPriority2Int(PIN.$static.swiPriority);
%%}
/*
 *  =============================== PIN ===============================
 */

#include <ti/drivers/PIN.h>
#include <ti/drivers/pin/PINCC26XX.h>

const PIN_Config BoardGpioInitTable[] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let name = inst.$name;
    % let comment = "";
    % let attrs = PIN.moduleStatic.getAttrs(inst);
    % if (inst.$hardware && inst.$hardware.displayName) {
    %     comment = "/\* " + inst.$hardware.displayName + " (" + PIN.getDIO(inst) + ") \*/";
    % }
    % else if (inst.parentInstanceName == "") {
    %     comment = "/\* " + inst.$name + " (" + PIN.getDIO(inst) + ") \*/";
    % }
    % else if (inst.parentInstanceName != "") {
    %     let hardwareName = "";
    %     if (inst.$ownedBy.$hardware && inst.$ownedBy.$hardware.displayName) hardwareName = inst.$ownedBy.$hardware.displayName + ", ";
    %     comment = "/\* " + hardwareName + "Parent Signal: " + inst.parentInstanceName + ", (" + PIN.getDIO(inst) + ") \*/";
    % }
    % if (comment != "") {
    `comment`
    % }
    `name` | `attrs`,
% }

    PIN_TERMINATE
};

const PINCC26XX_HWAttrs PINCC26XX_hwAttrs = {
    .intPriority = `pinIntPriority`,
    .swiPriority = `pinSwiPriority`
};